

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;


public partial class HelpDeskEntities : DbContext
{
    public HelpDeskEntities()
        : base("name=HelpDeskEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public DbSet<Attachment> Attachments { get; set; }

    public DbSet<AutoAssign> AutoAssigns { get; set; }

    public DbSet<Comment> Comments { get; set; }

    public DbSet<CompanyCategory> CompanyCategories { get; set; }

    public DbSet<CompanyCategoryException> CompanyCategoryExceptions { get; set; }

    public DbSet<CompanyContract> CompanyContracts { get; set; }

    public DbSet<CompanyProduct> CompanyProducts { get; set; }

    public DbSet<Config> Configs { get; set; }

    public DbSet<ContractTemplate> ContractTemplates { get; set; }

    public DbSet<CuteChat4_InstantMessage> CuteChat4_InstantMessage { get; set; }

    public DbSet<CuteChat4_Lobby> CuteChat4_Lobby { get; set; }

    public DbSet<CuteChat4_LogEvent> CuteChat4_LogEvent { get; set; }

    public DbSet<CuteChat4_LogMessage> CuteChat4_LogMessage { get; set; }

    public DbSet<CuteChat4_Portal> CuteChat4_Portal { get; set; }

    public DbSet<CuteChat4_Rule> CuteChat4_Rule { get; set; }

    public DbSet<CuteChat4_Settings> CuteChat4_Settings { get; set; }

    public DbSet<CuteChat4_SupportAgent> CuteChat4_SupportAgent { get; set; }

    public DbSet<CuteChat4_SupportCustomer> CuteChat4_SupportCustomer { get; set; }

    public DbSet<CuteChat4_SupportDepartment> CuteChat4_SupportDepartment { get; set; }

    public DbSet<CuteChat4_SupportFeedback> CuteChat4_SupportFeedback { get; set; }

    public DbSet<CuteChat4_SupportMessage> CuteChat4_SupportMessage { get; set; }

    public DbSet<CuteChat4_SupportSession> CuteChat4_SupportSession { get; set; }

    public DbSet<CuteChat4_User> CuteChat4_User { get; set; }

    public DbSet<EmailQueue> EmailQueues { get; set; }

    public DbSet<Event> Events { get; set; }

    public DbSet<KBArticle> KBArticles { get; set; }

    public DbSet<KBCategory> KBCategories { get; set; }

    public DbSet<Language> Languages { get; set; }

    public DbSet<OperatorPermission> OperatorPermissions { get; set; }

    public DbSet<Permission> Permissions { get; set; }

    public DbSet<Role> Roles { get; set; }

    public DbSet<SupplierProduct> SupplierProducts { get; set; }

    public DbSet<SupplierProductsType> SupplierProductsTypes { get; set; }

    public DbSet<Supplier> Suppliers { get; set; }

    public DbSet<SupportTeamMember> SupportTeamMembers { get; set; }

    public DbSet<SupportTeamPermission> SupportTeamPermissions { get; set; }

    public DbSet<SupportTeam> SupportTeams { get; set; }

    public DbSet<TicketActivity> TicketActivities { get; set; }

    public DbSet<TicketPriority> TicketPriorities { get; set; }

    public DbSet<TicketStatu> TicketStatus { get; set; }

    public DbSet<User> Users { get; set; }

    public DbSet<vw_AutoAssign> vw_AutoAssign { get; set; }

    public DbSet<vw_Comments> vw_Comments { get; set; }

    public DbSet<vw_CompanyCategoryException> vw_CompanyCategoryException { get; set; }

    public DbSet<vw_CompanyUser> vw_CompanyUser { get; set; }

    public DbSet<vw_Events> vw_Events { get; set; }

    public DbSet<vw_KBArticle> vw_KBArticle { get; set; }

    public DbSet<vw_KBCategory> vw_KBCategory { get; set; }

    public DbSet<vw_User> vw_User { get; set; }

    public DbSet<Ticket> Tickets { get; set; }

    public DbSet<PhoneCall> PhoneCalls { get; set; }

    public DbSet<EmailTemplate> EmailTemplates { get; set; }

    public DbSet<EmailBlackList> EmailBlackLists { get; set; }

    public DbSet<SupportCategory> SupportCategories { get; set; }

    public DbSet<vw_SupportCategory> vw_SupportCategory { get; set; }

    public DbSet<TicketsSource> TicketsSources { get; set; }

    public DbSet<vw_SupportTicket> vw_SupportTicket { get; set; }

    public DbSet<Company> Companies { get; set; }

    public DbSet<vw_CompanyContract> vw_CompanyContract { get; set; }

    public DbSet<EmailInbox> EmailInboxes { get; set; }


    public virtual ObjectResult<sp_GetCategoryList_Result> sp_GetCategoryList(Nullable<int> level)
    {

        var levelParameter = level.HasValue ?
            new ObjectParameter("Level", level) :
            new ObjectParameter("Level", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCategoryList_Result>("sp_GetCategoryList", levelParameter);
    }


    public virtual ObjectResult<sp_GetSupportCategoryList_Result> sp_GetSupportCategoryList(Nullable<int> level)
    {

        var levelParameter = level.HasValue ?
            new ObjectParameter("Level", level) :
            new ObjectParameter("Level", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSupportCategoryList_Result>("sp_GetSupportCategoryList", levelParameter);
    }


    public virtual ObjectResult<Nullable<int>> sp_GetOperatorPermissions(Nullable<int> optId)
    {

        var optIdParameter = optId.HasValue ?
            new ObjectParameter("OptId", optId) :
            new ObjectParameter("OptId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetOperatorPermissions", optIdParameter);
    }


    public virtual ObjectResult<Nullable<int>> sp_GetAllcounts()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetAllcounts");
    }


    public virtual ObjectResult<Nullable<int>> GetContractRemainingTime(Nullable<int> companyContractId)
    {

        var companyContractIdParameter = companyContractId.HasValue ?
            new ObjectParameter("CompanyContractId", companyContractId) :
            new ObjectParameter("CompanyContractId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetContractRemainingTime", companyContractIdParameter);
    }

}

